name: documentation CI  # TODO: determine informative names for this workflow and for `build.yaml` workflow

on:
  workflow_call:  # TODO: add trigger/call in network-operator repo
    inputs:
      git_tag:
        type: string
        default: latest
        description: The git tag (version) from the calling workflow
        required: true
  push:  # TODO: remove after development
    branches:
    - feature/make-docs

jobs:
  docs-ci:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN_NVIDIA_CI_CD }}  # TODO: add this secret to docs repository
      PR_TITLE_PREFIX: "task: update documentation for"
      VERSION: ${{ inputs.git_tag || 'latest' }}
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN_NVIDIA_CI_CD }}  # token must be explicitly set here for push to work in following step
    - name: Make docs
      run: |
        make branch-helm-docs api-docs generate-docs-versions-var doca-driver-build-update
    - name: Close any existing documentation PRs
      run: |
        # TODO: validate which repo the PRs are listed from
        gh pr list --search "$PR_TITLE_PREFIX" --json number,title              # TODO: debug: verify output
        gh pr list --search "$PR_TITLE_PREFIX" --json number --jq ".[].number"  # TODO: debug: verify output
        for pr_number in $(gh pr list --search "$PR_TITLE_PREFIX" --json number --jq ".[].number"); do
          gh pr close $pr_number
        done
    - name: Create PR
      env:
        DOWNSTREAM_REPO_OWNER: nvidia-ci-cd
        DOWNSTREAM_FEATURE_BRANCH: update-docs-for-${{ env.VERSION }}
        UPSTREAM_REPO_OWNER: maze88   # TODO: revert to 'Mellanox' after development
        UPSTREAM_DEFAULT_BRANCH: main
        COMMIT_MESSAGE: ${{ env.PR_TITLE_PREFIX }} ${{ env.VERSION }}
      run: |
        git config user.name  nvidia-ci-cd
        git config user.email svc-cloud-orch-gh@nvidia.com
        gh repo fork --remote --default-branch-only
        gh repo sync $DOWNSTREAM_REPO_OWNER/${{ github.event.repository.name }} --source $UPSTREAM_REPO_OWNER/${{ github.event.repository.name }} --branch $UPSTREAM_DEFAULT_BRANCH

        git checkout -b $DOWNSTREAM_FEATURE_BRANCH
        git status
        git add docs
        git commit -m "$COMMIT_MESSAGE"

        git push -u origin $DOWNSTREAM_FEATURE_BRANCH
        gh pr create \
          --head $DOWNSTREAM_REPO_OWNER:$DOWNSTREAM_FEATURE_BRANCH \
          --base $UPSTREAM_DEFAULT_BRANCH \
          --title "$COMMIT_MESSAGE" \
          --body "Created by the *${{ github.job }}* job in [${{ github.repository }} CI](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}), triggered by ${{ env.GITHUB_EVENT_NAME }}."  # TODO: verify value for 'triggered by' makes sense
